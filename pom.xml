<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>net.qihoo.ads.flink</groupId>
    <artifactId>flink-utils</artifactId>
    <version>0.1-SNAPSHOT</version>
    <modules>
        <module>flink-formats</module>
        <module>flink-connectors</module>
        <module>flink-helper</module>
        <module>flink-table-functions</module>
    </modules>
    <packaging>pom</packaging>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <scala.binary.version>2.11</scala.binary.version>
        <scala.version>2.11.12</scala.version>
        <flink.binary.version>1.11</flink.binary.version>
        <flink.version>1.11.0</flink.version>
        <slf4j.version>1.7.15</slf4j.version>
        <log4j.version>2.12.1</log4j.version>
        <confluent.version>5.3.1</confluent.version>
        <parquet.version>1.10.0</parquet.version>
        <kafkaconfigclient.version>1.0.2</kafkaconfigclient.version>
        <mv-log-format.version>2.1-SNAPSHOT</mv-log-format.version>
    </properties>

    <dependencyManagement>
        <dependencies>

            <!-- Apache Flink dependencies -->
            <!-- These dependencies are provided, because they should not be packaged into the JAR file. -->
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-java</artifactId>
                <version>${flink.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-streaming-java_${scala.binary.version}</artifactId>
                <version>${flink.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-clients_${scala.binary.version}</artifactId>
                <version>${flink.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-table-common</artifactId>
                <version>${flink.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-table-api-java-bridge_2.11</artifactId>
                <version>${flink.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-table-api-scala-bridge_2.11</artifactId>
                <version>${flink.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-table-planner-blink_2.11</artifactId>
                <version>${flink.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-shaded-hadoop-2</artifactId>
                <version>2.7.5-7.0</version>
                <scope>provided</scope>
            </dependency>

            <!-- Add connector dependencies here. They must be in the default scope (compile). -->

            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-connector-kafka_${scala.binary.version}</artifactId>
                <version>${flink.version}</version>
            </dependency>

            <!-- Add flink format dependencies here. They must be in the default scope (compile). -->

            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-avro-confluent-registry</artifactId>
                <version>${flink.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-json</artifactId>
                <version>${flink.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-parquet_2.11</artifactId>
                <version>${flink.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.parquet</groupId>
                <artifactId>parquet-hadoop</artifactId>
                <version>${parquet.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.parquet</groupId>
                <artifactId>parquet-avro</artifactId>
                <version>${parquet.version}</version>
            </dependency>

            <!-- Add logging framework, to produce console output when running in the IDE. -->
            <!-- These dependencies are excluded from the application JAR by default. -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-slf4j-impl</artifactId>
                <version>${log4j.version}</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-api</artifactId>
                <version>${log4j.version}</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-core</artifactId>
                <version>${log4j.version}</version>
                <scope>runtime</scope>
            </dependency>

            <!-- Add custom dependencies. -->

            <dependency>
                <groupId>net.qihoo.ads.kafka</groupId>
                <artifactId>kafka-config-client</artifactId>
                <version>${kafkaconfigclient.version}</version>
            </dependency>

            <dependency>
                <groupId>joda-time</groupId>
                <artifactId>joda-time</artifactId>
                <version>2.5</version>
                <scope>provided</scope>
                <!-- Avro records can contain JodaTime fields when using logical fields.
                    In order to handle them, we need to add an optional dependency.
                    Users with those Avro records need to add this dependency themselves. -->
                <optional>true</optional>
            </dependency>

            <dependency>
                <groupId>com.mediav</groupId>
                <artifactId>mv-log-format</artifactId>
                <version>${mv-log-format.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>org.apache.thrift</groupId>
                <artifactId>libthrift</artifactId>
                <version>0.6.1</version>
                <scope>provided</scope>
                <exclusions>
                    <exclusion>
                        <groupId>javax.servlet</groupId>
                        <artifactId>servlet-api</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.apache.httpcomponents</groupId>
                        <artifactId>httpclient</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <repositories>
        <repository>
            <id>qihoo-releases</id>
            <name>Releases Repository</name>
            <url>https://maven.corp.mediav.com/nexus/content/repositories/releases</url>
        </repository>

        <repository>
            <id>qihoo-snapshots</id>
            <url>http://maven.corp.mediav.com/nexus/content/repositories/snapshots/</url>
        </repository>

        <repository>
            <id>qihoo-central</id>
            <url>http://maven.corp.mediav.com/nexus/content/repositories/central/</url>
        </repository>

        <repository>
            <id>qihoo-public</id>
            <url>http://maven.corp.mediav.com/nexus/content/repositories/public/</url>
        </repository>

        <repository>
            <id>qihoo-thirdparty</id>
            <url>http://maven.corp.mediav.com/nexus/content/repositories/thirdparty/</url>
        </repository>

        <repository>
            <id>qihoo-cdh</id>
            <url>http://maven.corp.mediav.com/nexus/content/repositories/cloudera/</url>
        </repository>

        <repository>
            <id>confluent</id>
            <url>https://packages.confluent.io/maven/</url>
        </repository>
    </repositories>

    <distributionManagement>
        <repository>
            <id>qihoo-releases</id>
            <url>https://maven.corp.mediav.com/nexus/content/repositories/releases</url>
        </repository>
        <snapshotRepository>
            <id>qihoo-snapshots</id>
            <url>http://maven.corp.mediav.com/nexus/content/repositories/snapshots/</url>
        </snapshotRepository>
    </distributionManagement>

</project>
